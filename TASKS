 * base Создать базовый django-проект который на главной странице к
примеру выводит имя/фамилию/био/контакты тестируемого (данные должны
храниться в базе) - требования что-бы manage.py syncdb, manage.py
runserver заходим в браузер а там уже все данные есть - т.е. есть данные
загрузились из fixtures
estimate: 2h
3h

   * auth Добавить авторизацию для этой страницы
estimate: 1h
45m

   * middleware Сделать middleware который сохраняет все запросы в базу
estimate: 1h
1h

   * template context сделать template-context-processor который
добавляет django.settings в контекст
estimate: 1h
15m

   * forms - создать страницу с формой где можно редактировать данные
которые на первой странице
estimate: 2h
40m

   * forms-widgets - для даты рождения на той же странице сделать
widget который показует календарик
estimate: 30m
1h30m

   * forms-model-extra - подразумевается что все предыдущие задания по
формам делались через forms.ModelForm - задание сделать так что-бы
порядок полей в этой форме проинвертировался
estimate: 30m

   * template-tags - написать тег который принимает любой обект и
рендерит ссылку на его редактирование в админке ({% edit_list
request.user %})
estimate: 2h

   * commands - написать django комманду которая например печатает все
модели приложения и количество объектов в каждой
estimate: 1h

   * signals - написать обработчик сигнала который для каждой модели
создает запись в базе о ее создании/редактровании/удалении
estimate: 2h

Total estimate: 15h*1.4 = 21h
5h40m

Порядок виконнаня:
+ * вимоги внести в репо в TASKS
+ * оцінити час на кожну задачу (і загальний час) і записати в TASKS
 * під час виконання записувати час, який витрачено на кожну задачу (в
той же файл)
 * кожна задача має включати в себе тести (стандартні django)
 * слідкувати за test coverage, pep8 та pylint score

Бонуси:
 * тести з використанням
  - tddspry (http://github.com/playpauseandstop/tddspry/tree/master),
  - windmill (http://www.getwindmill.com/),